* {
  margin: 0;
  border: 0;
  padding: 0;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  font-style: inherit;
  border-collapse: collapse;
  text-decoration: inherit;
  color: inherit;
}

*:focus {
  outline: none;
}

html {
  overflow-y: scroll;
  overflow-x: hidden;
}

html, body {
  position: relative;
  min-height: 100vh;
  font-size: 18px;
  font-family: "Gill Sans", serif;
  width: 100%;
  text-align: center;
}

a, label, button {
  cursor: pointer;
}

strong {
  font-weight: bold;
}

em {
  font-style: italic;
}

mark {
  border: 1px solid #000;
  border-radius: 0.5em;
  background-color: inherit;
  padding: 0 0.5em;
  margin: 0 2px;
}

dfn {
  border-bottom: 1px dotted #000;
  font-weight: bold;
}

h1 {
  font-weight: bold;
  text-transform: uppercase;
}

h2 {
  font-style: italic;
}
h2:before {
  content: "\25b8";
  padding-right: 0.5em;
  font-style: normal;
}

figure {
  text-align: center;
}

label {
  display: block;
}

ul, ol {
  padding-left: 20px;
}

ul > li {
  list-style-type: disc;
}
ol > li {
  list-style-type: decimal;
}

blockquote:before, q:before {
  content: "\0201c";
}
blockquote:after, q:after {
  content: "\0201d";
}

[data-code], .code {
  text-align: left;
}

[data-code], .code, code {
  white-space: pre-wrap;
  font-family: "Courier New", monospace;
  font-style: normal;
}
.HTMLCodeBlock [data-code], .HTMLCodeBlock .code, .HTMLCodeBlock code {
  font-weight: normal;
  font-size: 1rem;
  text-transform: none;
}

.HTMLCodeBlock q:before, .HTMLCodeBlock q:after {
  content: "";
}
.HTMLCodeBlock q span:before {
  content: "\0201c";
}
.HTMLCodeBlock q span:after {
  content: "\0201d";
}
.HTMLCodeBlock dfn {
  border-bottom: 0;
}
.HTMLCodeBlock dfn span {
  border-bottom: 1px dotted #000;
}

input[type=text] {
  display: inline-block;
  border-bottom: 1px dotted #000;
  white-space: nowrap;
  font-family: "Comic Sans MS", cursive;
  width: 6em;
}
td input[type=text]:only-child {
  width: 100%;
}
input[type=text]:focus {
  background-color: #ffb;
}
input[type=text].checkbox {
  float: left;
  border: 1px solid #000;
  width: 1em;
  height: 1em;
  text-align: center;
}
input[type=text].checkbox + span {
  display: block;
  padding-left: 2em;
}
input[type=text].correct {
  background-color: #dfd;
  animation: flash-correct 0.7s forwards;
}
input[type=text].line {
  display: block;
  width: 100%;
}
input[type=text].inline {
  text-align: center;
  width: 3em;
}
input[type=text].flex {
  flex-grow: 1;
  margin-left: 0.5em;
  border-width: 0 0 1px 0;
  border-radius: 0;
}
input[type=text].flex:only-child {
  margin-left: 0;
}

span.line {
  display: inline-flex;
  width: 100%;
}

.wordbank {
  text-align: center;
}
.wordbank ul, .wordbank ol {
  padding-left: 0;
}
.wordbank li {
  display: inline-block;
  margin: 0 0.5em;
  border-bottom: 1px dotted #000;
  padding-right: 0.5em;
}
.wordbank ol {
  counter-reset: count-num;
}
.wordbank ol li {
  counter-increment: count-num;
}
.wordbank ol li:before {
  content: counter(count-num) ". ";
}

#score {
  position: fixed;
  top: 0;
  right: 0;
  background-color: #dfd;
  border-bottom-left-radius: 10px;
  overflow: hidden;
  box-shadow: 5px -5px 10px 0px #cec inset, 0px 0px 10px 0px #000;
  transition: opacity 0.3s;
  z-index: 9999;
  opacity: 0.95;
}
@media print {
  #score {
    display: none;
  }
}
#score:hover, #score:active, #score:focus {
  opacity: 1;
}
#score #correct {
  position: relative;
  display: inline-block;
  transition: color 0.3s;
}
#score.active #correct {
  color: #000;
  animation: flip 0.5s forwards;
}
#score > * {
  display: block;
  width: 100%;
  background-color: transparent;
  font-size: 18px;
  line-height: 18px;
  padding: 5px 10px;
  border-bottom: 1px solid rgba(100, 155, 100, 0.3);
  box-sizing: border-box;
  color: #8a8;
}
#score label, #score button {
  transition: background-color 0.2s;
}
#score label:hover, #score button:hover {
  background-color: rgba(255, 255, 255, 0.4);
}
#score label:active,
#score button:active,
#score input:checked + label {
  background-color: rgba(0, 100, 0, 0.2);
}
#score > input[type="checkbox"] {
  position: absolute;
  top: 0;
  left: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  opacity: 0.01;
}

#main {
  font-size: 0;
  margin: 0 auto;
}

.page {
  display: block;
  margin: 2em auto;
  padding: 1em;
  width: 90%;
  background-color: #fff;
  border: 1px dotted transparent;
  border-right-color: #ddd;
  border-bottom-color: #ddd;
  box-sizing: border-box;
  font-size: 18px;
  line-height: 1.6em;
  text-align: left;
  vertical-align: top;
  clear: both;
  overflow: visible;
  position: relative;
}
.page .footer {
  box-sizing: border-box;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 0 1em;
}
.page .footer p {
  text-align: center;
  font-style: italic;
}
.page .footer .aside {
  float: left;
}
.page:nth-child(even) .aside {
  float: right;
}
.page .main h1, .page .main h2, .page .main p, .page .main table, .page .main ol, .page .main ul, .page .main .aside, .page .main fieldset, .page .main > pre {
  margin-bottom: 1em;
}
.page li {
  padding-left: 0.5em;
}
.page table, .page tr, .page td {
  box-sizing: border-box;
  position: relative;
}
.page table {
  counter-reset: count-num count-alpha;
  width: 100%;
}
.page table.inline {
  width: auto;
  margin-left: auto;
  margin-right: auto;
}
.page table .count {
  padding: 0 0.5em;
  text-align: left;
}
.page table .count.num {
  counter-increment: count-num;
}
.page table .count.num:before {
  content: counter(count-num) ".";
}
.page table .count.alpha {
  counter-increment: count-alpha;
}
.page table .count.alpha:before {
  content: counter(count-alpha,lower-alpha) ".";
}
.page table td {
  position: relative;
  vertical-align: top;
  padding: 0 0.5em;
  white-space: nowrap;
}
@media print {
  .page {
    page-break-inside: avoid;
    page-break-before: always;
    border-width: 0px;
    padding: 0;
    margin: 0;
    width: 100%;
    height: 100vh;
  }
}
@media screen {
  .page {
    display: inline-block;
    margin: 0;
  }
}

@media print {
  html, body {
    font-size: 24px;
  }
}
@media screen {
  #background {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100%;
    z-index: -1;
    background-color: #666;
    box-shadow: 0 0 100px 0 #555 inset;
  }
}
@media screen and (max-aspect-ratio: 55 / 85) {
  html, body {
    font-size: 3.92vw;
  }

  .page {
    height: 151.45455vw;
    width: 98vw;
  }
}
@media screen and (min-aspect-ratio: 55 / 85) {
  html, body {
    font-size: 2.58824vh;
  }

  .page {
    height: 100vh;
    width: 64.70588vh;
  }
}
@media screen and (min-aspect-ratio: 55 / 85) and (max-height: 619.72727px) {
  html, body {
    font-size: 4vw;
  }

  .page {
    height: 154.54545vw;
    width: 100vw;
  }
}
@media screen and (min-aspect-ratio: 110 / 85) and (max-height: 619.72727px) {
  html, body {
    font-size: 16.04px;
  }

  .page {
    height: 619.72727px;
    width: 401px;
  }
}
@keyframes flash-correct {
  from {
    background-color: #fff;
    color: #fff;
  }
  to {
    background-color: #dfd;
    color: #000;
  }
}
@keyframes flip {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
